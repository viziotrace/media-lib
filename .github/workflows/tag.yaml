name: Build and Release on Tag

on:
  push:
    tags:
      - "v*"

jobs:
  build-macos-intel:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install yasm
        run: brew install yasm

      - name: Build release
        # On macOS, we need to build with the videotoolbox feature to get hardware acceleration
        run: cargo build --release --features videotoolbox

      - name: Zip shared library
        run: |
          cd target/release
          zip libmedia_lib_macos_intel.zip libmedia_lib.dylib

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libmedia_lib_macos_intel
          path: target/release/libmedia_lib_macos_intel.zip

  build-macos-arm:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install yasm
        run: brew install yasm

      - name: Build release
        # On macOS, we need to build with the videotoolbox feature to get hardware acceleration
        run: cargo build --release --features videotoolbox

      - name: Zip shared library
        run: |
          cd target/release
          zip libmedia_lib_macos_arm.zip libmedia_lib.dylib

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libmedia_lib_macos_arm
          path: target/release/libmedia_lib_macos_arm.zip

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-toolchain mingw-w64-x86_64-rust

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable-x86_64-pc-windows-gnu
          override: true
          target: x86_64-pc-windows-gnu

      - name: Install Git
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm git
          pacman -S --noconfirm yasm
          pacman -S --noconfirm make

      - name: Build release
        shell: msys2 {0}
        env:
          MSYSTEM: MINGW64
        # d3d12va is required for hardware acceleration on Windows
        run: |
          cargo build --release --features d3d12va

      - name: Zip shared library
        run: |
          cd target/release
          Compress-Archive -Path libmedia_lib.dll -DestinationPath libmedia_lib_windows.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libmedia_lib_windows
          path: target/release/libmedia_lib_windows.zip

  create-release:
    needs: [build-macos-intel, build-macos-arm, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download macOS Intel artifact
        uses: actions/download-artifact@v4
        with:
          name: libmedia_lib_macos_intel

      - name: Download macOS ARM artifact
        uses: actions/download-artifact@v4
        with:
          name: libmedia_lib_macos_arm

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: libmedia_lib_windows

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            libmedia_lib_macos_intel.zip
            libmedia_lib_macos_arm.zip
            libmedia_lib_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
